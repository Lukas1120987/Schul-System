requests
Pillow
customtkinter
matplotlib
pyotp
qrcode
webbrowser
urllib.parse
tkinterweb
pywebview 


import uuid

SYSTEM_INFO_FILE = "data/system_info.json"

def get_current_version():
    """Liest die Version aus version.txt."""
    try:
        with open("version.txt", "r", encoding="utf-8") as f:
            return f.read().strip()
    except FileNotFoundError:
        return "unbekannt"

def init_system_info():
    """Erstellt oder l√§dt System-ID + Versionsinformationen."""
    current_version = get_current_version()
    if not os.path.exists(SYSTEM_INFO_FILE):
        info = {
            "system_id": str(uuid.uuid4()),
            "version": current_version,
            "created": datetime.now().isoformat(timespec="seconds")
        }
        with open(SYSTEM_INFO_FILE, "w", encoding="utf-8") as f:
            json.dump(info, f, indent=4, ensure_ascii=False)
        print(f"[INFO] Neue System-ID erstellt: {info['system_id']}")
    else:
        with open(SYSTEM_INFO_FILE, "r", encoding="utf-8") as f:
            info = json.load(f)
        # Falls Version abweicht, aktualisieren
        if info.get("version") != current_version:
            info["version"] = current_version
            with open(SYSTEM_INFO_FILE, "w", encoding="utf-8") as f:
                json.dump(info, f, indent=4, ensure_ascii=False)
        print(f"[INFO] System-ID geladen: {info['system_id']} (Version: {info['version']})")

def get_system_info():
    """Liest Systeminformationen aus."""
    with open(SYSTEM_INFO_FILE, "r", encoding="utf-8") as f:
        return json.load(f)
